package problems.cec2006;

import java.util.Vector;

import problems.AbstractProblem;

//CEC 2006
public class G16 extends AbstractProblem {
	private static int dimension = 5;
	private static double[] domainsMin = new double[]{704.4148, 68.6, 0, 193, 25};	
	private static double[] domainsMax = new double[]{906.3855, 288.88, 134.75, 287.0966, 84.1988};
	
    public Double fitness(Vector<Double> x) {
    	double f;
    	double x1, x2, x3, x4, x5;
		double[] C = new double[17];
		double[] Y = new double[17];
	
		x1 = x.get(0);
		x2 = x.get(1);
		x3 = x.get(2);
		x4 = x.get(3);
		x5 = x.get(4);
	
		Y[0] = x2 + x3 + 41.6;
		C[0] = 0.024 * x4 - 4.62;
		Y[1] = (12.5 / C[0]) + 12.0;
		C[1] = 0.0003535 * Math.pow(x1, 2.0) + 0.5311 * x1 + 0.08705 * Y[1] * x1;
		C[2] = 0.052 * x1 + 78.0 + 0.002377 * Y[1] * x1;
		Y[2] = C[1] / C[2];
		Y[3] = 19.0 * Y[2];
		C[3] = 0.04782 * (x1 - Y[2]) + ((0.1956 * Math.pow(x1 - Y[2], 2.0)) / x2) + 0.6376 * Y[3] + 1.594 * Y[2];
		C[4] = 100 * x2;
		C[5] = x1 - Y[2] - Y[3];
		C[6] = 0.950 - (C[3] / C[4]);
		Y[4] = C[5] * C[6];
		Y[5] = x1 - Y[4] - Y[3] - Y[2];
		C[7] = (Y[4] + Y[3]) * 0.995;
		Y[6] = C[7] / Y[0];
		Y[7] = C[7] / 3798.0;
		C[8] = Y[6] - (0.0663 * Y[6] / Y[7]) - 0.3153;
		Y[8] = (96.82 / C[8]) + 0.321 * Y[0];
		Y[9] = 1.29 * Y[4] + 1.258 * Y[3] + 2.29 * Y[2] + 1.71 * Y[5];
		Y[10] = 1.71 * x1 - 0.452 * Y[3] + 0.580 * Y[2];
		C[9] = 12.3 / 752.3;
		C[10] = 1.75 * Y[1] * 0.995 * x1;
		C[11] = 0.995 * Y[9] + 1998.0;
		Y[11] = C[9] * x1 + (C[10] / C[11]);
		Y[12] = C[11] - 1.75 * Y[1];
		Y[13] = 3623.0 + 64.4 * x2 + 58.4 * x3 + (146312.0 / (Y[8] + x5));
		C[12] = 0.995 * Y[9] + 60.8 * x2 + 48 * x4 - 0.1121 * Y[13] - 5095.0;
		Y[14] = Y[12] / C[12];
		Y[15] = 148000.0 - 331000.0 * Y[14] + 40.0 * Y[12] - 61.0 * Y[14] * Y[12];
		C[13] = 2324 * Y[9] - 28740000 * Y[1];
		Y[16] = 14130000 - 1328.0 * Y[9] - 531.0 * Y[10] + (C[13] / C[11]);
		C[14] = (Y[12] / Y[14]) - (Y[12] / 0.52);
		C[15] = 1.104 - 0.72 * Y[14];
		C[16] = Y[8] + x5;
	
		f = 0.0000005843 * Y[16] - 0.000117 * Y[13] - 0.1365 - 0.00002358 * Y[12] - 0.000001502 * Y[15] - 0.0321 * Y[11] - 0.004324 * Y[4] - 0.0001 * (C[14] / C[15]) - 37.48 * (Y[1] / C[11]);
		f = -f;
		  
		return f;
    }

    public double violation(Vector<Double> x) {
    	double g1, g2, g3, g4, g5, g6, g7, g8, g9, g10, g11, g12, g13, g14, g15, g16, g17, g18, g19, g20, g21, g22, g23, g24, g25, g26, g27, g28, g29, g30, g31, g32, g33, g34, g35, g36, g37, g38;
    	double x1, x2, x3, x4, x5;
    	double[] C = new double[17];
		double[] Y = new double[17];
		
		x1 = x.get(0);
		x2 = x.get(1);
		x3 = x.get(2);
		x4 = x.get(3);
		x5 = x.get(4);
	
		Y[0] = x2 + x3 + 41.6;
		C[0] = 0.024 * x4 - 4.62;
		Y[1] = (12.5 / C[0]) + 12.0;
		C[1] = 0.0003535 * Math.pow(x1, 2.0) + 0.5311 * x1 + 0.08705 * Y[1] * x1;
		C[2] = 0.052 * x1 + 78.0 + 0.002377 * Y[1] * x1;
		Y[2] = C[1] / C[2];
		Y[3] = 19.0 * Y[2];
		C[3] = 0.04782 * (x1 - Y[2]) + ((0.1956 * Math.pow(x1 - Y[2], 2.0)) / x2) + 0.6376 * Y[3] + 1.594 * Y[2];
		C[4] = 100 * x2;
		C[5] = x1 - Y[2] - Y[3];
		C[6] = 0.950 - (C[3] / C[4]);
		Y[4] = C[5] * C[6];
		Y[5] = x1 - Y[4] - Y[3] - Y[2];
		C[7] = (Y[4] + Y[3]) * 0.995;
		Y[6] = C[7] / Y[0];
		Y[7] = C[7] / 3798.0;
		C[8] = Y[6] - (0.0663 * Y[6] / Y[7]) - 0.3153;
		Y[8] = (96.82 / C[8]) + 0.321 * Y[0];
		Y[9] = 1.29 * Y[4] + 1.258 * Y[3] + 2.29 * Y[2] + 1.71 * Y[5];
		Y[10] = 1.71 * x1 - 0.452 * Y[3] + 0.580 * Y[2];
		C[9] = 12.3 / 752.3;
		C[10] = 1.75 * Y[1] * 0.995 * x1;
		C[11] = 0.995 * Y[9] + 1998.0;
		Y[11] = C[9] * x1 + (C[10] / C[11]);
		Y[12] = C[11] - 1.75 * Y[1];
		Y[13] = 3623.0 + 64.4 * x2 + 58.4 * x3 + (146312.0 / (Y[8] + x5));
		C[12] = 0.995 * Y[9] + 60.8 * x2 + 48 * x4 - 0.1121 * Y[13] - 5095.0;
		Y[14] = Y[12] / C[12];
		Y[15] = 148000.0 - 331000.0 * Y[14] + 40.0 * Y[12] - 61.0 * Y[14] * Y[12];
		C[13] = 2324 * Y[9] - 28740000 * Y[1];
		Y[16] = 14130000 - 1328.0 * Y[9] - 531.0 * Y[10] + (C[13] / C[11]);
		C[14] = (Y[12] / Y[14]) - (Y[12] / 0.52);
		C[15] = 1.104 - 0.72 * Y[14];
		C[16] = Y[8] + x5;
		
    	g1 = -Y[3] + (0.28 / 0.72) * Y[4];
	    g2 = -1.5 * x2 + x3;
	    g3 = -21.0 + 3496.0 * (Y[1] / C[11]);
	    g4 = -(62212.0 / C[16]) + 110.6 + Y[0];
    	g5 = 213.1 - Y[0];
	    g6 = Y[0] - 405.23;
	    g7 = 17.505 - Y[1];
	    g8 = Y[1] - 1053.6667;
	    g9 = 11.275 - Y[2];
	    g10 = Y[2] - 35.03;
	    g11 = 214.228 - Y[3];
	    g12 = Y[3] - 665.585;
	    g13 = 7.458 - Y[4];
	    g14 = Y[4] - 584.463;
	    g15 = 0.961 - Y[5];
	    g16 = Y[5] - 265.916;
	    g17 = 1.612 - Y[6];
	    g18 = Y[6] - 7.046;
	    g19 = 0.146 - Y[7];
	    g20 = Y[7] - 0.222;
	    g21 = 107.99 - Y[8];
	    g22 = Y[8] - 273.366;
	    g23 = 922.693 - Y[9];
	    g24 = Y[9] - 1286.105;
	    g25 = 926.832 - Y[10];
	    g26 = Y[10] - 1444.046;
	    g27 = 18.766 - Y[11];
	    g28 = Y[11] - 537.141;
	    g29 = 1072.163 - Y[12];
	    g30 = Y[12] - 3247.039;
	    g31 = 8961.448 - Y[13];
	    g32 = Y[13] - 26844.086;
	    g33 = 0.063 - Y[14];
	    g34 = Y[14] - 0.386;
	    g35 = 71084.33 - Y[15];
	    g36 = Y[15] - 140000.0;
	    g37 = 2802713.0 - Y[16];
	    g38 = Y[16] - 12146108.0;
    	
		if (g1 <= 0) {
			g1 = 0;
		}
		if (g2 <= 0) {
			g2 = 0;
		}
		if (g3 <= 0) {
			g3 = 0;
		}
		if (g4 <= 0) {
			g4 = 0;
		}
		if (g5 <= 0) {
			g5 = 0;
		}
		if (g6 <= 0) {
			g6 = 0;
		}
		if (g7 <= 0) {
			g7 = 0;
		}
		if (g8 <= 0) {
			g8 = 0;
		}
		if (g9 <= 0) {
			g9 = 0;
		}
		if (g10 <= 0) {
			g10 = 0;
		}
		if (g11 <= 0) {
			g11 = 0;
		}
		if (g12 <= 0) {
			g12 = 0;
		}
		if (g13 <= 0) {
			g13 = 0;
		}
		if (g14 <= 0) {
			g14 = 0;
		}
		if (g15 <= 0) {
			g15 = 0;
		}
		if (g16 <= 0) {
			g16 = 0;
		}
		if (g17 <= 0) {
			g17 = 0;
		}
		if (g18 <= 0) {
			g18 = 0;
		}
		if (g19 <= 0) {
			g19 = 0;
		}
		if (g20 <= 0) {
			g20 = 0;
		}
		if (g21 <= 0) {
			g21 = 0;
		}
		if (g22 <= 0) {
			g22 = 0;
		}
		if (g23 <= 0) {
			g23 = 0;
		}
		if (g24 <= 0) {
			g24 = 0;
		}
		if (g25 <= 0) {
			g25 = 0;
		}
		if (g26 <= 0) {
			g26 = 0;
		}
		if (g27 <= 0) {
			g27 = 0;
		}
		if (g28 <= 0) {
			g28 = 0;
		}
		if (g29 <= 0) {
			g29 = 0;
		}
		if (g30 <= 0) {
			g30 = 0;
		}
		if (g31 <= 0) {
			g31 = 0;
		}
		if (g32 <= 0) {
			g32 = 0;
		}
		if (g33 <= 0) {
			g33 = 0;
		}
		if (g34 <= 0) {
			g34 = 0;
		}
		if (g35 <= 0) {
			g35 = 0;
		}
		if (g36 <= 0) {
			g36 = 0;
		}
		if (g37 <= 0) {
			g37 = 0;
		}
		if (g38 <= 0) {
			g38 = 0;
		}

		return (g1 + g2 + g3 + g4 + g5 + g6 + g7 + g8 + g9 + g10 + g11 + g12 + g13 + g14 + g15 + g16 + g17 + g18 + g19 + g20 + g21 + g22 + g23 + g24 + g25 + g26 + g27 + g28 + g29 + g30 + g31 + g32 + g33 + g34 + g35 + g36 + g37 + g38)/38;
    }
    
    public double[] violationArray(Vector<Double> x) {
    	double g1, g2, g3, g4, g5, g6, g7, g8, g9, g10, g11, g12, g13, g14, g15, g16, g17, g18, g19, g20, g21, g22, g23, g24, g25, g26, g27, g28, g29, g30, g31, g32, g33, g34, g35, g36, g37, g38;
    	double x1, x2, x3, x4, x5;
    	double[] C = new double[17];
		double[] Y = new double[17];
		
		x1 = x.get(0);
		x2 = x.get(1);
		x3 = x.get(2);
		x4 = x.get(3);
		x5 = x.get(4);
	
		Y[0] = x2 + x3 + 41.6;
		C[0] = 0.024 * x4 - 4.62;
		Y[1] = (12.5 / C[0]) + 12.0;
		C[1] = 0.0003535 * Math.pow(x1, 2.0) + 0.5311 * x1 + 0.08705 * Y[1] * x1;
		C[2] = 0.052 * x1 + 78.0 + 0.002377 * Y[1] * x1;
		Y[2] = C[1] / C[2];
		Y[3] = 19.0 * Y[2];
		C[3] = 0.04782 * (x1 - Y[2]) + ((0.1956 * Math.pow(x1 - Y[2], 2.0)) / x2) + 0.6376 * Y[3] + 1.594 * Y[2];
		C[4] = 100 * x2;
		C[5] = x1 - Y[2] - Y[3];
		C[6] = 0.950 - (C[3] / C[4]);
		Y[4] = C[5] * C[6];
		Y[5] = x1 - Y[4] - Y[3] - Y[2];
		C[7] = (Y[4] + Y[3]) * 0.995;
		Y[6] = C[7] / Y[0];
		Y[7] = C[7] / 3798.0;
		C[8] = Y[6] - (0.0663 * Y[6] / Y[7]) - 0.3153;
		Y[8] = (96.82 / C[8]) + 0.321 * Y[0];
		Y[9] = 1.29 * Y[4] + 1.258 * Y[3] + 2.29 * Y[2] + 1.71 * Y[5];
		Y[10] = 1.71 * x1 - 0.452 * Y[3] + 0.580 * Y[2];
		C[9] = 12.3 / 752.3;
		C[10] = 1.75 * Y[1] * 0.995 * x1;
		C[11] = 0.995 * Y[9] + 1998.0;
		Y[11] = C[9] * x1 + (C[10] / C[11]);
		Y[12] = C[11] - 1.75 * Y[1];
		Y[13] = 3623.0 + 64.4 * x2 + 58.4 * x3 + (146312.0 / (Y[8] + x5));
		C[12] = 0.995 * Y[9] + 60.8 * x2 + 48 * x4 - 0.1121 * Y[13] - 5095.0;
		Y[14] = Y[12] / C[12];
		Y[15] = 148000.0 - 331000.0 * Y[14] + 40.0 * Y[12] - 61.0 * Y[14] * Y[12];
		C[13] = 2324 * Y[9] - 28740000 * Y[1];
		Y[16] = 14130000 - 1328.0 * Y[9] - 531.0 * Y[10] + (C[13] / C[11]);
		C[14] = (Y[12] / Y[14]) - (Y[12] / 0.52);
		C[15] = 1.104 - 0.72 * Y[14];
		C[16] = Y[8] + x5;
		
    	g1 = -Y[3] + (0.28 / 0.72) * Y[4];
	    g2 = -1.5 * x2 + x3;
	    g3 = -21.0 + 3496.0 * (Y[1] / C[11]);
	    g4 = -(62212.0 / C[16]) + 110.6 + Y[0];
    	g5 = 213.1 - Y[0];
	    g6 = Y[0] - 405.23;
	    g7 = 17.505 - Y[1];
	    g8 = Y[1] - 1053.6667;
	    g9 = 11.275 - Y[2];
	    g10 = Y[2] - 35.03;
	    g11 = 214.228 - Y[3];
	    g12 = Y[3] - 665.585;
	    g13 = 7.458 - Y[4];
	    g14 = Y[4] - 584.463;
	    g15 = 0.961 - Y[5];
	    g16 = Y[5] - 265.916;
	    g17 = 1.612 - Y[6];
	    g18 = Y[6] - 7.046;
	    g19 = 0.146 - Y[7];
	    g20 = Y[7] - 0.222;
	    g21 = 107.99 - Y[8];
	    g22 = Y[8] - 273.366;
	    g23 = 922.693 - Y[9];
	    g24 = Y[9] - 1286.105;
	    g25 = 926.832 - Y[10];
	    g26 = Y[10] - 1444.046;
	    g27 = 18.766 - Y[11];
	    g28 = Y[11] - 537.141;
	    g29 = 1072.163 - Y[12];
	    g30 = Y[12] - 3247.039;
	    g31 = 8961.448 - Y[13];
	    g32 = Y[13] - 26844.086;
	    g33 = 0.063 - Y[14];
	    g34 = Y[14] - 0.386;
	    g35 = 71084.33 - Y[15];
	    g36 = Y[15] - 140000.0;
	    g37 = 2802713.0 - Y[16];
	    g38 = Y[16] - 12146108.0;
    	
		if (g1 <= 0) {
			g1 = 0;
		}
		if (g2 <= 0) {
			g2 = 0;
		}
		if (g3 <= 0) {
			g3 = 0;
		}
		if (g4 <= 0) {
			g4 = 0;
		}
		if (g5 <= 0) {
			g5 = 0;
		}
		if (g6 <= 0) {
			g6 = 0;
		}
		if (g7 <= 0) {
			g7 = 0;
		}
		if (g8 <= 0) {
			g8 = 0;
		}
		if (g9 <= 0) {
			g9 = 0;
		}
		if (g10 <= 0) {
			g10 = 0;
		}
		if (g11 <= 0) {
			g11 = 0;
		}
		if (g12 <= 0) {
			g12 = 0;
		}
		if (g13 <= 0) {
			g13 = 0;
		}
		if (g14 <= 0) {
			g14 = 0;
		}
		if (g15 <= 0) {
			g15 = 0;
		}
		if (g16 <= 0) {
			g16 = 0;
		}
		if (g17 <= 0) {
			g17 = 0;
		}
		if (g18 <= 0) {
			g18 = 0;
		}
		if (g19 <= 0) {
			g19 = 0;
		}
		if (g20 <= 0) {
			g20 = 0;
		}
		if (g21 <= 0) {
			g21 = 0;
		}
		if (g22 <= 0) {
			g22 = 0;
		}
		if (g23 <= 0) {
			g23 = 0;
		}
		if (g24 <= 0) {
			g24 = 0;
		}
		if (g25 <= 0) {
			g25 = 0;
		}
		if (g26 <= 0) {
			g26 = 0;
		}
		if (g27 <= 0) {
			g27 = 0;
		}
		if (g28 <= 0) {
			g28 = 0;
		}
		if (g29 <= 0) {
			g29 = 0;
		}
		if (g30 <= 0) {
			g30 = 0;
		}
		if (g31 <= 0) {
			g31 = 0;
		}
		if (g32 <= 0) {
			g32 = 0;
		}
		if (g33 <= 0) {
			g33 = 0;
		}
		if (g34 <= 0) {
			g34 = 0;
		}
		if (g35 <= 0) {
			g35 = 0;
		}
		if (g36 <= 0) {
			g36 = 0;
		}
		if (g37 <= 0) {
			g37 = 0;
		}
		if (g38 <= 0) {
			g38 = 0;
		}

		return new double[] {g1, g2, g3, g4, g5, g6, g7, g8, g9, g10, g11, g12, g13, g14, g15, g16, g17, g18, g19, g20, g21, g22, g23, g24, g25, g26, g27, g28, g29, g30, g31, g32, g33, g34, g35, g36, g37, g38};
    }
    
    public int getDimension() {
    	return dimension;
    }
    
    public double[] getDomainsMin() {
    	return domainsMin;
    }
    
    public double[] getDomainsMax() {
    	return domainsMax;
    }
    
    public String getName() { 
    	return "G16_5D";
    }
}
