package functions;

import java.util.Vector;

//CEC 2006
public class G16 extends AbstractFunction {
	private static int dimension = 5;
	private static double[] domainsMin = new double[]{0, 0, 0, 0, 0};	
	private static double[] domainsMax = new double[]{10, 10, 10, 10, 10};
	
    public Double f(Vector<Double> x) {
    	double x1, x2, x3, x4, x5;
    	  double C[17], Y[17];

    	  x1 = x[0];
    	  x2 = x[1];
    	  x3 = x[2];
    	  x4 = x[3];
    	  x5 = x[4];

    	  Y[0] = x2 + x3 + 41.6;
    	  C[0] = 0.024 * x4 - 4.62;
    	  Y[1] = (12.5 / C[0]) + 12.0;
    	  C[1] = 0.0003535 * pow (x1, 2.0) + 0.5311 * x1 + 0.08705 * Y[1] * x1;
    	  C[2] = 0.052 * x1 + 78.0 + 0.002377 * Y[1] * x1;
    	  Y[2] = C[1] / C[2];
    	  Y[3] = 19.0 * Y[2];
    	  C[3] = 0.04782 * (x1 - Y[2]) + ((0.1956 * pow (x1 - Y[2], 2.0)) / x2) + 0.6376 * Y[3] + 1.594 * Y[2];
    	  C[4] = 100 * x2;
    	  C[5] = x1 - Y[2] - Y[3];
    	  C[6] = 0.950 - (C[3] / C[4]);
    	  Y[4] = C[5] * C[6];
    	  Y[5] = x1 - Y[4] - Y[3] - Y[2];
    	  C[7] = (Y[4] + Y[3]) * 0.995;
    	  Y[6] = C[7] / Y[0];
    	  Y[7] = C[7] / 3798.0;
    	  C[8] = Y[6] - (0.0663 * Y[6] / Y[7]) - 0.3153;
    	  Y[8] = (96.82 / C[8]) + 0.321 * Y[0];
    	  Y[9] = 1.29 * Y[4] + 1.258 * Y[3] + 2.29 * Y[2] + 1.71 * Y[5];
    	  Y[10] = 1.71 * x1 - 0.452 * Y[3] + 0.580 * Y[2];
    	  C[9] = 12.3 / 752.3;
    	  C[10] = 1.75 * Y[1] * 0.995 * x1;
    	  C[11] = 0.995 * Y[9] + 1998.0;
    	  Y[11] = C[9] * x1 + (C[10] / C[11]);
    	  Y[12] = C[11] - 1.75 * Y[1];
    	  Y[13] = 3623.0 + 64.4 * x2 + 58.4 * x3 + (146312.0 / (Y[8] + x5));
    	  C[12] = 0.995 * Y[9] + 60.8 * x2 + 48 * x4 - 0.1121 * Y[13] - 5095.0;
    	  Y[14] = Y[12] / C[12];
    	  Y[15] = 148000.0 - 331000.0 * Y[14] + 40.0 * Y[12] - 61.0 * Y[14] * Y[12];
    	  C[13] = 2324 * Y[9] - 28740000 * Y[1];
    	  Y[16] = 14130000 - 1328.0 * Y[9] - 531.0 * Y[10] + (C[13] / C[11]);
    	  C[14] = (Y[12] / Y[14]) - (Y[12] / 0.52);
    	  C[15] = 1.104 - 0.72 * Y[14];
    	  C[16] = Y[8] + x5;

    	  f[0] = 0.0000005843 * Y[16] - 0.000117 * Y[13] - 0.1365 - 0.00002358 * Y[12] - 0.000001502 * Y[15] - 0.0321 * Y[11] - 0.004324 * Y[4] - 0.0001 * (C[14] / C[15]) - 37.48 * (Y[1] / C[11]);
    	  f[0] = -f[0]; /* Max-->Min, Modified by Jane,Nov 22 2005 */
    	  
    }

    public double violation(Vector<Double> x) {
    	g[0] = -Y[3] + (0.28 / 0.72) * Y[4];
  	  g[1] = -1.5 * x2 + x3;
  	  g[2] = -21.0 + 3496.0 * (Y[1] / C[11]);
  	  g[3] = -(62212.0 / C[16]) + 110.6 + Y[0];
  	  g[4] = 213.1 - Y[0];
  	  g[5] = Y[0] - 405.23;
  	  g[6] = 17.505 - Y[1];
  	  g[7] = Y[1] - 1053.6667;
  	  g[8] = 11.275 - Y[2];
  	  g[9] = Y[2] - 35.03;
  	  g[10] = 214.228 - Y[3];
  	  g[11] = Y[3] - 665.585;
  	  g[12] = 7.458 - Y[4];
  	  g[13] = Y[4] - 584.463;
  	  g[14] = 0.961 - Y[5];
  	  g[15] = Y[5] - 265.916;
  	  g[16] = 1.612 - Y[6];
  	  g[17] = Y[6] - 7.046;
  	  g[18] = 0.146 - Y[7];
  	  g[19] = Y[7] - 0.222;
  	  g[20] = 107.99 - Y[8];
  	  g[21] = Y[8] - 273.366;
  	  g[22] = 922.693 - Y[9];
  	  g[23] = Y[9] - 1286.105;
  	  g[24] = 926.832 - Y[10];
  	  g[25] = Y[10] - 1444.046;
  	  g[26] = 18.766 - Y[11];
  	  g[27] = Y[11] - 537.141;
  	  g[28] = 1072.163 - Y[12];
  	  g[29] = Y[12] - 3247.039;
  	  g[30] = 8961.448 - Y[13];
  	  g[31] = Y[13] - 26844.086;
  	  g[32] = 0.063 - Y[14];
  	  g[33] = Y[14] - 0.386;
  	  g[34] = 71084.33 - Y[15];
  	  g[35] = Y[15] - 140000.0;
  	  g[36] = 2802713.0 - Y[16];
  	  g[37] = Y[16] - 12146108.0;
    	
    			if (g1 <= 0) {
    				g1 = 0;
    			}
    			if (g2 <= 0) {
    				g2 = 0;
    			}
    			if ((h1 - e) <= 0) {
    				h1 = 0;
    			}
    			if ((h2 - e) <= 0) {
    				h2 = 0;
    			}

    			return (g1 + g2 + h1 + h2)/4;
    }
    
    public int getDimension() {
    	return dimension;
    }
    
    public double[] getDomainsMin() {
    	return domainsMin;
    }
    
    public double[] getDomainsMax() {
    	return domainsMax;
    }
}
