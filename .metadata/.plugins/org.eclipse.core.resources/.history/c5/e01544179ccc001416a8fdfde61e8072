package functions;

import java.util.Vector;

//CEC 2006
public class G14 extends AbstractFunction {
	private static int dimension = 10;
	private static double[] domainsMin = new double[]{0, 0, 0, 0, 0, 0, 0, 0, 0, 0};	
	private static double[] domainsMax = new double[]{10, 10, 10, 10, 10, 10, 10, 10, 10, 10};
	
    public Double f(Vector<Double> x) {
    	int i;
    	  double sumlog = 0.0, sum = 0.0;
    	  double C[10] = { -6.089, -17.164, -34.054, -5.914, -24.721, -14.986, -24.100, -10.708, -26.662, -22.179 };

    	  /* objective function */
    	  for (i = 0; i < 10; i++)
    	    sumlog += x[i];
    	  for (i = 0; i < 10; i++)
    	    sum += x[i] * (C[i] + log (x[i] / sumlog));
    	  f[0] = sum;
    	  /* constraints h=0 */
    	  h[0] = x[0] + 2.0 * x[1] + 2.0 * x[2] + x[5] + x[9] - 2.0;
    	  h[1] = x[3] + 2.0 * x[4] + x[5] + x[6] - 1.0;
    	  h[2] = x[2] + x[6] + x[7] + 2.0 * x[8] + x[9] - 1.0;
    }

    public double violation(Vector<Double> x) {
    	//Mean Violations
    			if (g1 <= 0) {
    				g1 = 0;
    			}
    			if (g2 <= 0) {
    				g2 = 0;
    			}
    			if ((h1 - e) <= 0) {
    				h1 = 0;
    			}
    			if ((h2 - e) <= 0) {
    				h2 = 0;
    			}

    			return (g1 + g2 + h1 + h2)/4;
    }
    
    public int getDimension() {
    	return dimension;
    }
    
    public double[] getDomainsMin() {
    	return domainsMin;
    }
    
    public double[] getDomainsMax() {
    	return domainsMax;
    }
}
